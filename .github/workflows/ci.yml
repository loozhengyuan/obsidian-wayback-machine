name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release:
        description: Triggers a new release and specifies the version bump type
        type: choice
        required: false
        default: patch
        options:
          - major
          - minor
          - patch

defaults:
  run:
    # NOTE: Default option does not include `-o pipefail` as documented
    # unless explicitly specifying the `bash` shell.
    # https://github.com/actions/runner/issues/353
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-22.04
    timeout-minutes: 3

    steps:
      - name: Checkout branch
        uses: actions/checkout@v5.0.0

      - name: Set up Deno
        uses: denoland/setup-deno@v2.0.3
        with:
          deno-version: "2.4.3"

      - name: Check types
        run: |
          deno check '**/*.ts'

      - name: Check linting
        run: |
          deno lint

      - name: Check formatting
        run: |
          deno fmt --check

  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 3
    needs:
      - lint

    steps:
      - name: Checkout branch
        uses: actions/checkout@v5.0.0

      - name: Set up Deno
        uses: denoland/setup-deno@v2.0.3
        with:
          deno-version: "2.4.3"

      - name: Test build task
        run: |
          deno task build

      - name: Prepare dist artifacts
        run: |
          mkdir -p dist/
          mv main.js manifest.json dist/

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: dist
          path: dist/
          if-no-files-found: error
          retention-days: 1

  release:
    runs-on: ubuntu-22.04
    timeout-minutes: 3
    needs:
      - build
    permissions:
      contents: write # NOTE: Required to create GitHub releases

    steps:
      - name: Checkout branch
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0 # NOTE: Required to fetch ALL tags

      - name: Download dist artifacts
        uses: actions/download-artifact@v5.0.0
        with:
          name: dist
          path: dist/

      - name: Verify dist artifacts
        run: |
          ls -lah dist/

      - name: Determine current and next tags
        id: tags
        run: |
          curr="$(git tag --list | sed 's/^v//' | awk '/^[0-9]+\.[0-9]+\.[0-9]+$/' | sort --version-sort | tail -n 1)"
          next="$(npx --yes semver --increment '${{ inputs.release }}' "${curr:-0.0.0}")"

          printf "CURRENT:\t${curr}\n"
          printf "NEXT:\t\t${next}\n"

          echo "curr=${curr}" >> "$GITHUB_OUTPUT"
          echo "next=${next}" >> "$GITHUB_OUTPUT"

      - name: Verify next version tag
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
        run: |
          [ "$(jq -r -c '.version' dist/manifest.json)" = '${{ steps.tags.outputs.next }}' ]

      - name: Create release
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.tags.outputs.next }}" --generate-notes --fail-on-no-commits --draft dist/*
